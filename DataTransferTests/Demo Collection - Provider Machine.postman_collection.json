{
	"info": {
		"_postman_id": "928e155f-3ec4-4e0e-81e5-9e9c1923032e",
		"name": "Demo Collection - Provider Machine",
		"description": "Demo for dataspace cross-machine communication - provider side",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create Artifact",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Create artifact and retrieve artifact ID\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.response.to.have.status(201);",
							"    pm.collectionVariables.set(\"createdTestArtifact\", jsonData[\"_links\"][\"self\"][\"href\"]);",
							"    pm.expect(pm.collectionVariables.get(\"createdTestArtifact\")).to.exist;",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"strictSSL": false
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"title\": \"{{ARTIFACT_NAME_TO_CREATE}}\",\"description\": \"{{ARTIFACT_DESC_TO_CREATE}}\",\"accessUrl\": \"{{ARTIFACT_ACCESS_URL_TO_CREATE}}\", \"automatedDownload\": false}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{PROVIDER_CONNECTOR_URL}}{{PROVIDER_CONNECTOR_ARTIFACTS_URL}}",
					"host": [
						"{{PROVIDER_CONNECTOR_URL}}{{PROVIDER_CONNECTOR_ARTIFACTS_URL}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Representation",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Create representation and retrieve representation ID\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.response.to.have.status(201);",
							"    pm.collectionVariables.set(\"createdTestRepresentation\", jsonData[\"_links\"][\"self\"][\"href\"]);",
							"    pm.expect(pm.collectionVariables.get(\"createdTestRepresentation\")).to.exist;",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"strictSSL": false
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"title\": \"Representation of {{ARTIFACT_NAME_TO_CREATE}}\",\"description\": \"Representation description of {{ARTIFACT_NAME_TO_CREATE}}\", \"mediaType\": \"{{ARTIFACT_MEDIA_TYPE_TO_CREATE}}\", \"language\": \"https://w3id.org/idsa/code/EN\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{PROVIDER_CONNECTOR_URL}}{{PROVIDER_CONNECTOR_REPRESENTATIONS_URL}}",
					"host": [
						"{{PROVIDER_CONNECTOR_URL}}{{PROVIDER_CONNECTOR_REPRESENTATIONS_URL}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Offer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Create offer and retrieve offer ID\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.response.to.have.status(201);",
							"    pm.collectionVariables.set(\"createdTestOffer\", jsonData[\"_links\"][\"self\"][\"href\"])",
							"    pm.expect(pm.collectionVariables.get(\"createdTestOffer\")).to.exist;",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"strictSSL": false
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"title\": \"{{ARTIFACT_NAME_TO_CREATE}}\",\n  \"description\": \"{{ARTIFACT_DESC_TO_CREATE}}\",\n  \"keywords\": [],\n  \"publisher\": \"https://rmit.edu.au/\",\n  \"language\": \"EN\",\n  \"license\": \"\",\n  \"sovereign\": \"https://rmit.edu.au/\",\n  \"endpointDocumentation\": \"\",\n  \"paymentModality\": \"undefined\"\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{PROVIDER_CONNECTOR_URL}}{{PROVIDER_CONNECTOR_OFFERS_URL}}",
					"host": [
						"{{PROVIDER_CONNECTOR_URL}}{{PROVIDER_CONNECTOR_OFFERS_URL}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Rule",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Create rule and retrieve rule ID\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.response.to.have.status(201);",
							"    pm.collectionVariables.set(\"createdTestRule\", jsonData[\"_links\"][\"self\"][\"href\"])",
							"    pm.expect(pm.collectionVariables.get(\"createdTestRule\")).to.exist;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"strictSSL": false
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\": \"RACE Usage Policy\",\n    \"description\": \"A policy that allows unrestricted access\",\n    \"value\": \"{\\n  \\\"@context\\\" : {\\n    \\\"ids\\\" : \\\"https://w3id.org/idsa/core/\\\",\\n    \\\"idsc\\\" : \\\"https://w3id.org/idsa/code/\\\"\\n  },\\n  \\\"@type\\\" : \\\"ids:Permission\\\",\\n  \\\"@id\\\" : \\\"https://w3id.org/idsa/autogen/permission/51f5f7e4-f97f-4f91-bc57-b243714642be\\\",\\n  \\\"ids:description\\\" : [ {\\n    \\\"@value\\\" : \\\"provide-access\\\",\\n    \\\"@type\\\" : \\\"http://www.w3.org/2001/XMLSchema#string\\\"\\n  } ],\\n  \\\"ids:title\\\" : [ {\\n    \\\"@value\\\" : \\\"Example Usage Policy\\\",\\n    \\\"@type\\\" : \\\"http://www.w3.org/2001/XMLSchema#string\\\"\\n  } ],\\n  \\\"ids:postDuty\\\" : [ ],\\n  \\\"ids:assignee\\\" : [ ],\\n  \\\"ids:assigner\\\" : [ ],\\n  \\\"ids:action\\\" : [ {\\n    \\\"@id\\\" : \\\"https://w3id.org/idsa/code/USE\\\"\\n  } ],\\n  \\\"ids:constraint\\\" : [ ],\\n  \\\"ids:preDuty\\\" : [ ]\\n}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{PROVIDER_CONNECTOR_URL}}{{PROVIDER_CONNECTOR_RULES_URL}}",
					"host": [
						"{{PROVIDER_CONNECTOR_URL}}{{PROVIDER_CONNECTOR_RULES_URL}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Contract",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Create contract and retrieve contract ID\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.response.to.have.status(201);",
							"    pm.collectionVariables.set(\"createdTestContract\", jsonData[\"_links\"][\"self\"][\"href\"])",
							"    pm.expect(pm.collectionVariables.get(\"createdTestContract\")).to.exist;",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"strictSSL": false
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"title\": \"RaceContract\",\"description\": \"This is a contract from RACE\",\"provider\":\"{{PROVIDER_CONNECTOR_URL}}\",\"start\": \"{{CONTRACT_START_DATE}}\",\"end\": \"{{CONTRACT_END_DATE}}\"} ",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{PROVIDER_CONNECTOR_URL}}{{PROVIDER_CONNECTOR_CONTRACTS_URL}}",
					"host": [
						"{{PROVIDER_CONNECTOR_URL}}{{PROVIDER_CONNECTOR_CONTRACTS_URL}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Catalog",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Create catalog and retrieve catalog ID\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.response.to.have.status(201);",
							"    pm.collectionVariables.set(\"createdTestCatalog\", jsonData[\"_links\"][\"self\"][\"href\"]);",
							"    pm.expect(pm.collectionVariables.get(\"createdTestCatalog\")).to.exist;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"strictSSL": false
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"title\": \"RACE Catalog\", \n\"description\": \"RACE cretaed catalog.\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{PROVIDER_CONNECTOR_URL}}{{PROVIDER_CONNECTOR_CATALOGS_URL}}",
					"host": [
						"{{PROVIDER_CONNECTOR_URL}}{{PROVIDER_CONNECTOR_CATALOGS_URL}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Successful Artifact To Representation Addition",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Add artifact to representation\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.response.to.have.status(200);",
							"    pm.expect(jsonData).exist;",
							"    pm.expect(jsonData._embedded.artifacts).exist;",
							"    pm.expect(jsonData._embedded.artifacts).not.empty;  ",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"strictSSL": false
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\n    \"{{createdTestArtifact}}\"\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{createdTestRepresentation}}{{PROVIDER_CONNECTOR_ARTIFACTS_RESOURCE}}",
					"host": [
						"{{createdTestRepresentation}}{{PROVIDER_CONNECTOR_ARTIFACTS_RESOURCE}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Successful Representation To Offer Addition",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Add representation to offer\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.response.to.have.status(200);",
							"    pm.expect(jsonData).exist;",
							"    pm.expect(jsonData._embedded.representations).exist;",
							"    pm.expect(jsonData._embedded.representations).not.empty;",
							"    ",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"strictSSL": false
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\"{{createdTestRepresentation}}\"]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{createdTestOffer}}{{PROVIDER_CONNECTOR_REPRESENTATIONS_RESOURCE}}",
					"host": [
						"{{createdTestOffer}}{{PROVIDER_CONNECTOR_REPRESENTATIONS_RESOURCE}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Successful Offer To Catalog Addition",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Add offer to catalog\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.response.to.have.status(200);",
							"    pm.expect(jsonData).exist;",
							"    pm.expect(jsonData._embedded.resources).exist;",
							"    pm.expect(jsonData._embedded.resources).not.empty;",
							"    ",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"strictSSL": false
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[ \n\"{{createdTestOffer}}\"\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{createdTestCatalog}}{{PROVIDER_CONNECTOR_OFFERS_RESOURCE}}",
					"host": [
						"{{createdTestCatalog}}{{PROVIDER_CONNECTOR_OFFERS_RESOURCE}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Successful Offer To Contract Addition",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Add offer to contract\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.response.to.have.status(200);",
							"    pm.expect(jsonData).exist;",
							"    pm.expect(jsonData._embedded.resources).exist;",
							"    pm.expect(jsonData._embedded.resources).not.empty;",
							"    ",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"strictSSL": false
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\n    \"{{createdTestOffer}}\"\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{createdTestContract}}{{PROVIDER_CONNECTOR_OFFERS_RESOURCE}}",
					"host": [
						"{{createdTestContract}}{{PROVIDER_CONNECTOR_OFFERS_RESOURCE}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Successful Contract To Offer Addition",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Adding contract to offer\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.response.to.have.status(200);",
							"    pm.expect(jsonData).exist;",
							"    pm.expect(jsonData._embedded.contracts).exist;",
							"    pm.expect(jsonData._embedded.contracts).not.empty;",
							"    ",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"strictSSL": false
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\"{{createdTestContract}}\"]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{createdTestOffer}}{{PROVIDER_CONNECTOR_CONTRACTS_RESOURCE}}",
					"host": [
						"{{createdTestOffer}}{{PROVIDER_CONNECTOR_CONTRACTS_RESOURCE}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Successful Rule To Contract Addition",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Add rule to contract\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.response.to.have.status(200);",
							"    pm.expect(jsonData).exist;",
							"    pm.expect(jsonData._embedded.rules).exist;",
							"    pm.expect(jsonData._embedded.rules).not.empty;",
							"    ",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"strictSSL": false
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\n    \"{{createdTestRule}}\"\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{createdTestContract}}{{PROVIDER_CONNECTOR_RULES_RESOURCE}}",
					"host": [
						"{{createdTestContract}}{{PROVIDER_CONNECTOR_RULES_RESOURCE}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register Self at Metadata broker",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {},
				"strictSSL": false
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{PROVIDER_CONNECTOR_URL}}/api/ids/connector/update?recipient={{BROKER}}",
					"host": [
						"{{PROVIDER_CONNECTOR_URL}}"
					],
					"path": [
						"api",
						"ids",
						"connector",
						"update"
					],
					"query": [
						{
							"key": "recipient",
							"value": "{{BROKER}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Provider's Self-Description",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.response.to.be.ok;",
							"//store applicants self-description for further tests",
							"pm.collectionVariables.set(\"PROVIDER_SELF_DESCRIPTION\", jsonData)",
							"pm.test(\"INF_01\", function () {",
							"  pm.expect(jsonData).to.exist;",
							"});",
							"pm.test(\"INF_03\", function () {",
							"  pm.expect(jsonData[\"ids:publicKey\"][\"ids:keyValue\"]).to.exist;",
							"});",
							"pm.collectionVariables.set(\"applicantSelfDescription\", jsonData);",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"tlsPreferServerCiphers": false,
				"tlsDisabledProtocols": [
					"TLSv1",
					"TLSv1_1"
				]
			},
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{PROVIDER_CONNECTOR_URL}}/api/ids/description?recipient={{PROVIDER_CONNECTOR_URL}}{{PROVIDER_CONNECTOR_ACCESS_URL}}",
					"host": [
						"{{PROVIDER_CONNECTOR_URL}}"
					],
					"path": [
						"api",
						"ids",
						"description"
					],
					"query": [
						{
							"key": "recipient",
							"value": "{{PROVIDER_CONNECTOR_URL}}{{PROVIDER_CONNECTOR_ACCESS_URL}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Query connectors from broker",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"BRK_01\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.response.to.have.status(200);",
							"    pm.expect(jsonData[\"@graph\"]).exist;",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"tlsDisabledProtocols": [
					"TLSv1",
					"TLSv1_1"
				]
			},
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{PROVIDER_CONNECTOR_URL}}{{PROVIDER_CONNECTOR_DESCRIPTION_URL}}?recipient={{BROKER}}&elementId={{BROKER_REVERSEPROXY}}/connectors/",
					"host": [
						"{{PROVIDER_CONNECTOR_URL}}{{PROVIDER_CONNECTOR_DESCRIPTION_URL}}"
					],
					"query": [
						{
							"key": "recipient",
							"value": "{{BROKER}}"
						},
						{
							"key": "elementId",
							"value": "{{BROKER_REVERSEPROXY}}/connectors/"
						}
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "password",
				"type": "string"
			},
			{
				"key": "username",
				"value": "admin",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "ARTIFACT_NAME_TO_CREATE",
			"value": "ARDC Logo"
		},
		{
			"key": "ARTIFACT_DESC_TO_CREATE",
			"value": "Logo Image of ARDC"
		},
		{
			"key": "ARTIFACT_ACCESS_URL_TO_CREATE",
			"value": "https://upload.wikimedia.org/wikipedia/en/thumb/3/3a/Australian_Research_Data_Commons_logo.png/640px-Australian_Research_Data_Commons_logo.png"
		},
		{
			"key": "ARTIFACT_MEDIA_TYPE_TO_CREATE",
			"value": "image/png"
		},
		{
			"key": "PROVIDER_CONNECTOR_IP",
			"value": "127.0.0.1"
		},
		{
			"key": "PROVIDER_CONNECTOR_PORT",
			"value": "8080"
		},
		{
			"key": "PROVIDER_CONNECTOR_PROTOCOL",
			"value": "https"
		},
		{
			"key": "PROVIDER_CONNECTOR_URL",
			"value": "{{PROVIDER_CONNECTOR_PROTOCOL}}://{{PROVIDER_CONNECTOR_IP}}:{{PROVIDER_CONNECTOR_PORT}}"
		},
		{
			"key": "PROVIDER_FIRST_LEVEL_RESOURCE_NAME",
			"value": "/api"
		},
		{
			"key": "PROVIDER_IDS_RESOURCE_NAME",
			"value": "/ids"
		},
		{
			"key": "PROVIDER_DATA_RESOURCE_NAME",
			"value": "/data"
		},
		{
			"key": "PROVIDER_DESCRIPTION_RESOURCE_NAME",
			"value": "/description"
		},
		{
			"key": "PROVIDER_CONNECTOR_RESOURCE_NAME",
			"value": "/connector"
		},
		{
			"key": "PROVIDER_UPDATE_RESOURCE_NAME",
			"value": "/update"
		},
		{
			"key": "PROVIDER_CONNECTOR_ACCESS_URL",
			"value": "{{PROVIDER_FIRST_LEVEL_RESOURCE_NAME}}{{PROVIDER_IDS_RESOURCE_NAME}}{{PROVIDER_DATA_RESOURCE_NAME}}"
		},
		{
			"key": "PROVIDER_CONNECTOR_DESCRIPTION_URL",
			"value": "{{PROVIDER_FIRST_LEVEL_RESOURCE_NAME}}{{PROVIDER_IDS_RESOURCE_NAME}}{{PROVIDER_DESCRIPTION_RESOURCE_NAME}}"
		},
		{
			"key": "PROVIDER_CONNECTOR_OFFERS_RESOURCE",
			"value": "/offers"
		},
		{
			"key": "PROVIDER_CONNECTOR_OFFERS_URL",
			"value": "{{PROVIDER_FIRST_LEVEL_RESOURCE_NAME}}{{PROVIDER_CONNECTOR_OFFERS_RESOURCE}}"
		},
		{
			"key": "PROVIDER_CONNECTOR_CATALOGS_RESOURCE",
			"value": "/catalogs"
		},
		{
			"key": "PROVIDER_CONNECTOR_CATALOGS_URL",
			"value": "{{PROVIDER_FIRST_LEVEL_RESOURCE_NAME}}{{PROVIDER_CONNECTOR_CATALOGS_RESOURCE}}"
		},
		{
			"key": "PROVIDER_CONNECTOR_ARTIFACTS_RESOURCE",
			"value": "/artifacts"
		},
		{
			"key": "PROVIDER_CONNECTOR_ARTIFACTS_URL",
			"value": "{{PROVIDER_FIRST_LEVEL_RESOURCE_NAME}}{{PROVIDER_CONNECTOR_ARTIFACTS_RESOURCE}}"
		},
		{
			"key": "PROVIDER_CONNECTOR_RULES_RESOURCE",
			"value": "/rules"
		},
		{
			"key": "PROVIDER_CONNECTOR_RULES_URL",
			"value": "{{PROVIDER_FIRST_LEVEL_RESOURCE_NAME}}{{PROVIDER_CONNECTOR_RULES_RESOURCE}}"
		},
		{
			"key": "PROVIDER_CONNECTOR_CONTRACTS_RESOURCE",
			"value": "/contracts"
		},
		{
			"key": "PROVIDER_CONNECTOR_CONTRACTS_URL",
			"value": "{{PROVIDER_FIRST_LEVEL_RESOURCE_NAME}}{{PROVIDER_CONNECTOR_CONTRACTS_RESOURCE}}"
		},
		{
			"key": "PROVIDER_CONNECTOR_REPRESENTATIONS_RESOURCE",
			"value": "/representations"
		},
		{
			"key": "PROVIDER_CONNECTOR_REPRESENTATIONS_URL",
			"value": "{{PROVIDER_FIRST_LEVEL_RESOURCE_NAME}}{{PROVIDER_CONNECTOR_REPRESENTATIONS_RESOURCE}}"
		},
		{
			"key": "BROKER_REVERSEPROXY",
			"value": "https://broker-reverseproxy"
		},
		{
			"key": "BROKER",
			"value": "{{BROKER_REVERSEPROXY}}/infrastructure"
		},
		{
			"key": "CONTRACT_START_DATE",
			"value": "2025-01-01T00:00:00.000Z"
		},
		{
			"key": "CONTRACT_END_DATE",
			"value": "2026-01-01T00:00:00.000Z"
		},
		{
			"key": "createdTestArtifact",
			"value": ""
		},
		{
			"key": "createdTestRepresentation",
			"value": ""
		},
		{
			"key": "createdTestOffer",
			"value": ""
		},
		{
			"key": "createdTestRule",
			"value": ""
		},
		{
			"key": "createdTestContract",
			"value": ""
		},
		{
			"key": "createdTestCatalog",
			"value": ""
		},
		{
			"key": "PROVIDER_SELF_DESCRIPTION",
			"value": ""
		},
		{
			"key": "applicantSelfDescription",
			"value": ""
		}
	]
}